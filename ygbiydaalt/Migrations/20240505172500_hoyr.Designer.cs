// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ygbiydaalt.Models;

#nullable disable

namespace ygbiydaalt.Migrations
{
    [DbContext(typeof(TeslaCtx))]
    [Migration("20240505172500_hoyr")]
    partial class hoyr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ygbiydaalt.Models.Car", b =>
                {
                    b.Property<int>("carID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("carID"));

                    b.Property<string>("asctime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("excolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagepath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incolor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("modelID")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("range")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("topspeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("carID");

                    b.HasIndex("modelID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ygbiydaalt.Models.CarModel", b =>
                {
                    b.Property<int>("modelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("modelID"));

                    b.Property<string>("modelName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("modelID");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("ygbiydaalt.Models.PaymentType", b =>
                {
                    b.Property<int>("ptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ptID"));

                    b.Property<string>("ptname")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ptID");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("ygbiydaalt.Models.Sale", b =>
                {
                    b.Property<int>("saleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("saleID"));

                    b.Property<int?>("PaymentTypeptID")
                        .HasColumnType("int");

                    b.Property<int>("carID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("saledate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("saleID");

                    b.HasIndex("PaymentTypeptID");

                    b.HasIndex("carID");

                    b.HasIndex("userID");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ygbiydaalt.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("typeID")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("userID");

                    b.HasIndex("typeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ygbiydaalt.Models.UserType", b =>
                {
                    b.Property<int>("typeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("typeID"));

                    b.Property<string>("typename")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("typeID");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("ygbiydaalt.Models.Car", b =>
                {
                    b.HasOne("ygbiydaalt.Models.CarModel", "CarModels")
                        .WithMany("Cars")
                        .HasForeignKey("modelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("ygbiydaalt.Models.Sale", b =>
                {
                    b.HasOne("ygbiydaalt.Models.PaymentType", null)
                        .WithMany("Sales")
                        .HasForeignKey("PaymentTypeptID");

                    b.HasOne("ygbiydaalt.Models.Car", "Cars")
                        .WithMany("Sales")
                        .HasForeignKey("carID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ygbiydaalt.Models.User", "Users")
                        .WithMany("Sales")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ygbiydaalt.Models.User", b =>
                {
                    b.HasOne("ygbiydaalt.Models.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("typeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("ygbiydaalt.Models.Car", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ygbiydaalt.Models.CarModel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("ygbiydaalt.Models.PaymentType", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ygbiydaalt.Models.User", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ygbiydaalt.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
